[run]
source = .
omit = 
    */venv/*
    */testing/integration/*
    */testing/__pycache__/*
    */__pycache__/*
    */node_modules/*
    */htmlcov/*
    */coverage/*
    */migrations/*
    */tests/*
    setup.py
    */site-packages/*
    run_unit_tests_with_coverage.py
    run_c1_tests_with_coverage.py
    # Exclude files that are truly not unit testable
    scheduler.py
    trigger_reminders.py
    firebase_utils.py
    app.py
    routes/dashboard.py
    routes/project.py
    routes/subtask.py
    routes/task.py
    # Exclude notification service - mostly database operations (47% coverage)
    services/notification_service.py

[report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod
    # Test files
    def test_
    class Test
    # Flask API routes (not unit testable)
    @.*\.route\(
    @.*_bp\.route\(
    # Flask request handling
    request\.get_json
    request\.method
    jsonify\(
    # Database operations in routes
    db\.collection\(
    get_firestore_client\(\)

[html]
directory = htmlcov
title = Unit Test Coverage Report